supermarket# supermarket-ctl help
/opt/supermarket/embedded/bin/omnibus-ctl: command (subcommand)
console
  Enter the rails console for Supermarket
make-admin
  Make a Supermarket user an admin
test
  Run the Supermarket installation test suite
General Commands:
  cleanse
    Delete *all* supermarket data, and start from scratch.
  help
    Print this help message.
  reconfigure
    Reconfigure the application.
  show-config
    Show the configuration that would be generated by reconfigure.
  uninstall
    Kill all processes and uninstall the process supervisor (data will be preserved).
Service Management Commands:
  graceful-kill
    Attempt a graceful stop, then SIGKILL the entire process group.
  hup
    Send the services a HUP.
  int
    Send the services an INT.
  kill
    Send the services a KILL.
  once
    Start the services if they are down. Do not restart them if they stop.
  restart
    Stop the services if they are running, then start them again.
  service-list
    List all the services (enabled services appear with a *.)
  start
    Start services if they are down, and restart them if they stop.
  status
    Show the status of all the services.
  stop
    Stop the services, and do not restart them.
  tail
    Watch the service logs of all enabled services.
  term
    Send the services a TERM.
    #include <stdio.h>
#include <stdlib.h>
 
int main()
{
    float apples;
    float oranges;
    float price;
    float orangesPrice;
    float applesPrice;
    float applessum;
    float orangessum;
    float wallet = 30;
    float change;
    float sum;
    float card = 160.32;
    char payChoice;
 
    applesPrice = 5.61;
    orangesPrice = 4.32;
 
    printf("\nSupermarket Cashier\n");
    printf("\nHow many apples do you want?\n");
    scanf(" %f", &apples);
 
    printf("\nHow many oranges do you want?\n");
    scanf(" %f", &oranges);
 
    applessum = apples * applesPrice;
    orangessum = oranges * orangesPrice;
 
 
   if(apples >=3)
    {
   applessum = applessum * .9; //discount price
   }
 
   if(oranges >=3)
   {
       orangessum = orangessum * .9; //discount price
   }
 
    sum = applessum + orangessum;
 
    printf("Would you like to use wallet or card sir? (w/c)");
    scanf(" %c", &payChoice);
 
    if(payChoice == 'w'){
 
        if(wallet>sum){
            change = wallet - sum;
            printf("\nReceipt: \n");
    printf("\n %f apples = $ %f", apples, applessum);
    printf("\n %f oranges = $ %f", oranges, orangessum);
    printf("\n Balance: %.2f", change);
        }
    else{
 
        printf("Insufficient Funds!");
    }
        }
 
    else if (payChoice == 'c')
    {
        if(card>sum)
        {
            change = card - sum;
             printf("\nReceipt: \n");
    printf("\n %d apples = $ .2%f", apples, applessum);
    printf("\n %d oranges = $ .2%f", oranges, orangessum);
    printf("\n Balance: %.2f", change);
        }
        else{
 
        printf("Insufficient Funds!");
        }
    }
    else {
 
        printf("Incorrect Payment Method!");
    }
 
 
    return 0;

    }
